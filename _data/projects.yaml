


- name: Machine and deep learning
  projects:
    - name: Behavioral Cloning
      description: Behavioral Cloning is project where i use Convolution neural network (CNN) to clone driving behavior. I start by driving a car on a simulator and collect data, then train the network and finally, test the model on the simulator. 
      github: yacin-hamdi/udacity_nd_self_driving_car/tree/main/CarND-Behavioral-Cloning-P3
      image: cloning.png

    - name: Traffic Sign Classifer
      description: In this project I used LeNet architecture to train a deep neural network model to classify images of traffic sign.
      github: yacin-hamdi/udacity_nd_self_driving_car/tree/main/CarND-Traffic-Sign-Classifier-Project
      image: traffic_sign.png

    - name: Boston Housing
      description: this project is a part of udacity machine learning engineer, where i use classic machine learning algorithm to train a model that classify housing price in boston.
      github: yacin-hamdi/udacity_nd_machine_learning/tree/main/project_2_boston_housing
      image: boston.png

- name: Robotics
  projects:
    - name: Extended Kalman Filter
      description: this project is implementation of EKF in c++, to estimate the position of a moving object given a noisy Lidar and, radar sensor measurement.
      github: yacin-hamdi/udacity_nd_self_driving_car/tree/main/CarND-Extended-Kalman-Filter-Project
      image: ekf1.png

    - name: Drone Motion Planning
      description: this project is based on A* algorithm, it consists of planning and executing a trajectory of a drone in an urban environment. The code communicates with Udacity FCND Simulator using Udacidrone API.
      github: yacin-hamdi/FCND
      image: collinear_drone.png

    - name: CNC Machine
      description: I build this writing CNC machine as a part of my master final project, where i convert a conventional milling machine into a CNC, it is based on GRBL.
      image: cnc.png

- name: Computer Vision
  icon: fas fa-terminal
  projects:  
    - name: Finding Lane Lines
      description: Finding lane lines is a project,  where I applied computer vision techniques to detect lane lines in images and videos using python and opencv.
      github: yacin-hamdi/udacity_nd_self_driving_car/tree/main/project-1-LaneLines
      image: lanelines.jpg
      pypi: project/opencv-python/

    - name: Advanced Lane Lines
      description: Advanced lane lines is an improved version of finding lane lines, which includes advanced image processing to detect lanes regardless of lanes color, brightness, etc.
      github: yacin-hamdi/udacity_nd_self_driving_car/tree/main/CarND-Advanced-Lane-Lines-master
      image: advanced_lane.jpg
      pypi: project/opencv-python/

    - name: Vehicle Detection
      description: Vehicle Detection uses support vector machine which is a machine learning algorithm and, image processing to detect cars in video stream.
      github: yacin-hamdi/udacity_nd_self_driving_car/tree/main/CarND-Vehicle-Detection-master
      image: vehicle_detection.jpg
      pypi: project/opencv-python/

- name: C++
  projects:
    - name: System Monitor
      description: System monitor is a command line interface written in c++ that resemble the program htop, which is a standard program for monitoring Linux systems.
      github: yacin-hamdi/udacity_cpp/tree/main/project-2-system_monitoring
      image: monitor.png

    - name: Route Planning
      description: route planning is a GUI based on A* algorithm implemented in C++ that takes a starting point and a goal point and draw the optimal path between them on a given OpenStreetMap.
      github: yacin-hamdi/udacity_cpp/tree/main/1-CppND-Route-Planning
      image: route_planning.jpg
    

    - name: Concurrent Traffic Simulation
      description: Concurrent Traffic simulation uses queues at intersections and implementing traffic lights. Programmed using thread-safe communication protocols between vehicles and intersections.
      github: yacin-hamdi/udacity_cpp/tree/main/project-4-concurrent_traffic_simulation
      image: concurrent.png

    - name: Banking System
      description: Banking system is a command line interface application based on mysql database, it has two interface first the admin interface which allow admin to manage all accounts, the second is user interface which allow user to manage only his account.
      github: yacin-hamdi/udacity_cpp/tree/main/project-5-Capstone-bank-system
      image: banking.png

- name: Java
  projects:
    - name: Example
      description: This project can be installed from pypi.
      github: Example/Example
      pypi: Example

    - name: Example
      description: This project can be installed from pypi.
      github: Example/Example
      pypi: Example

- name: Android Development
  projects:
    - name: Example
      description: This project can be installed from pypi.
      github: Example/Example
      pypi: Example

    - name: Example
      description: This project can be installed from pypi.
      github: Example/Example
      pypi: Example  
